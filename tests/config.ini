[directories]
# directories with high capacity for data and model
storage_home = /fd1/QibinShi_data/
# waveform data and model to be trained will be saved under storage_home
data_dir = matfiles_for_denoiser/
save_model_dir = my_model
;save_model_dir = Release_Middle_augmentation_P4Hz_150s
;save_model_dir = Release_Middle_augmentation_S4Hz_150s_removeCoda_SoverCoda20_1980_2021_include_noFMS


# pre-trained models are within the package
pre_trained_denote = pre_trained_models/DenoTe.pth
pre_trained_WaveDecompNet = pre_trained_models/WaveDecompNet.pth

[data]
# phase type: P (half_length=25000) and S (half_length=20000)
half_length = 25000
;half_length = 20000
data_file = Alldepths_snr25_2000_21_sample10_lpass4_P_preP_MP_both_BH_HH.hdf5
;data_file = Ssnr20_lp4_1980_2021_include_noFMS.hdf5

use_demo = 1

# input size of the neural net
npts = 1500
# maximum stretching/squeezing ratio
stretch_max = 6
branch_signal = quake
branch_noise = noise


[training]
# gpu number: 0-3 depending on the machine
# use large number (9) to use cpu instead
gpu = 0
gpu_ids = 0,1,2,3

# transfer learning: 1-from our DenoTe; 0-use WaveDecompNet kernel
transfer = 0

# split of train=60%, validation=(1-train)*50% and test=(1-train)*50%
train_size = 0.6
test_size = 0.5

# random seeds for data splitting
rand_seed1 = 43
rand_seed2 = 11

# training hyper-parameters
batch_size = 64
epochs = 200
learning_rate = 0.001
minimum_epochs = 30
patience = 40

[testing]
batch_size = 10
retrain = 0
retrained_weights = /fd1/QibinShi_data/my_model/Branch_Encoder_Decoder_LSTM_weights.pth

[prediction]
phase = P

data_key =quake

sample_index = 89
;sample_index = 6

# the size to be denoised
npts = 1500
start_point = 750

# the size for source analyses
npts_trim = 600

# t* from Poli and Prieto (2016)
tstar = 0.3

# 2-Z component, 1-N, 0-E
component = 2

# lowest SNR to select raw data
minsnr = 2

# number of threads
threads = 2

# number of example events to be denoised
num_event = 2

use_demo = 1

data_wave = matfiles_for_denoiser/M6_deep100km_allSNR_P.hdf5
data_meta = matfiles_for_denoiser/metadata_M6_deep100km_allSNR_P.csv
model_dir = pre_trained_models/DenoTe.pth
;result_dir = DenoTe_results/Release_Middle_augmentation_P4Hz_150s/apply_to_deep_earthquakes
result_dir = DenoTe_results/testcode
